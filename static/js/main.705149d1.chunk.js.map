{"version":3,"sources":["Note.js","CreateNote.js","Notes.js","App.js","utils.js","index.js"],"names":["Note","className","onClick","this","props","onDelete","source","text","Component","CreateNote","onTextChange","event","setState","target","value","onReset","inputRef","current","focus","onSave","onCreate","state","React","createRef","ref","onChange","Notes","notes","map","index","trim","key","App","getNotes","notesList","$","getJSON","data","i","length","push","console","log","indexToRemove","oldState","array","slice","concat","JSON","stringify","ajax","url","method","async","newNodeText","onNoteDelete","bind","onNoteCreate","rootEl","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.705149d1.chunk.js","sourcesContent":["import React, {\n    Component\n} from \"react\";\nimport ReactMarkdown from \"react-markdown\";\n\n\nexport default class Note extends Component {\n    render() {\n        return <div className = \"Notes-Note\" >\n            <span className = \"Notes-Note-Delete\" onClick = {this.props.onDelete}>\n            &times;\n            </span>   \n            <span className = \"Notes-Note-Text\" > {<ReactMarkdown source={this.props.text} />}</span>\n            </div>;\n    }\n}\n","import React, {Component} from \"react\";\n\nexport default class CreateNote extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            text: \"\"\n        };\n        this.inputRef = React.createRef();\n    }\n    onTextChange = (event) => {\n        this.setState({\n            text: event.target.value //присваиваем знач текстареа\n        })\n    }\n    onReset = () => {\n        this.setState({\n            text: \"\"\n        }, () => {\n            this.inputRef.current.focus();\n        });\n\n    }\n    onSave = () => {\n        this.props.onCreate(this.state.text);\n        this.onReset();\n    }\n    render() {\n       \n        return ( < div className = \"Notes-Create-Wrapper\" >\n            <div className = \"Notes-Create\" >\n          <div className=\"Notes-Create__Header-Wrapper\">  <h1 className=\"Notes-Create__header\">Заметки</h1></div>\n            <\n            textarea ref = {\n                this.inputRef\n            }\n            className = \"Notes-Create-Input\"\n            value = {\n                this.state.text\n            }\n            onChange = {\n                this.onTextChange\n            }\n            />  < /\n            div > <\n            div className = \"Notes-Create-Buttons\" >\n            <\n            button className = \"Notes-Create-Button\"\n            onClick = {\n                this.onSave\n            } > Сохранить < /button> <\n            button className = \"Notes-Create-Button Notes-Create-Button_reset\"\n            onClick = {\n                this.onReset\n            } > Сброс < /button>     < /\n            div >\n            <\n            /div>)\n        }\n    }\n","import React, {\n    Component\n} from \"react\";\nimport \"./Notes.css\";\nimport \"./Note.css\";\nimport \"./CreateNote.css\";\nimport Note from \"./Note.js\";\nimport CreateNote from \"./CreateNote.js\";\n\n\n\n\nexport default class Notes extends Component {\n\n    render() {\n        return <div className = \"Notes\" >\n            <CreateNote onCreate = {this.props.onCreate}/>  \n        <hr/> \n        {this.props.notes.map((text, index) => {\n        if(text.trim()===''){return false} // если user строка без пробелов является пустотой, то отмена\n         return <Note text = {text} key = {index} onDelete = { () => this.props.onDelete(index) } />\n        \n         \n        })\n        } < /div>\n    }\n}\n","import React, {\n    Component\n} from \"react\";\nimport Notes from \"./Notes.js\";\nimport $ from \"jquery\";\n \nimport {\n    withoutIndex\n} from \"./utils.js\"\n\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            notes: []\n        };\n    }\n    componentDidMount(){\n        this.getNotes();\n    }\n\n    \n    async getNotes(){\n        let notesList = [];\n        await $.getJSON('./api/notes.json', function(data) {\n            for(let i = 0; i<data.length; i++){\n                notesList.push(data[i]);\n            }\n           \n        });\n        await this.setState({\n            notes: notesList\n        });\n        console.log(`notes.json:`);\n        console.log(notesList);\n    }\n    \n    \n    async onNoteDelete(indexToRemove){\n        await this.setState(oldState => {\n            return { \n                notes: withoutIndex(oldState.notes, indexToRemove)\n            }\n          });\n        \n         let notes = JSON.stringify(this.state.notes);\n\n        console.log(notes);\n        \n        await $.ajax({\n            url: './api/deleteNote.php',\n            method: 'POST',\n            async: false,\n            data: {\n                notes: notes\n            }\n        });\n        \n    }\n\n    async onNoteCreate(newNodeText){\n        \n        await this.setState(oldState => {\n             return {\n                notes: [newNodeText].concat(oldState.notes)\n            };\n          });\n       \n        let notes = JSON.stringify(this.state.notes);\n\n        console.log(notes);\n        \n        await $.ajax({\n            url: './api/saveNote.php',\n            method: 'POST',\n            async: false,\n            data: {\n                text: newNodeText,\n                notes: notes\n            }\n        });\n    \n        \n    }\n\n    render() {\n        return <Notes\n        notes={this.state.notes}\n        onDelete={this.onNoteDelete.bind(this)}\n        onCreate={this.onNoteCreate.bind(this)}\n        />;\n    }\n}\n\n\nexport default App;\n","export const withoutIndex = (array, index) =>\narray.slice(0, index).concat(array.slice(index + 1));","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\n\nimport App from \"./App\";\n\nconst rootEl = document.getElementById('root');\nReactDOM.render(<App />, rootEl);"],"sourceRoot":""}